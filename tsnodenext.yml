---
- name: Install NPM as pre-req
  ansible.builtin.import_playbook: nodejs.yml

- name: Create and configure a typescript nodenext install
  hosts: nodes
  become: true
  gather_facts: true

# this is a setup based on https://www.youtube.com/watch?v=H91aqUHn8sE

  vars:

    projname: "tsnodenext"
    sandbox: "/home/{{ vguser }}/{{ projname }}"

  tasks:

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ sandbox }}/src"
        state: directory
        mode: "0755"
        owner: "{{ vguser }}"

    - name: NPM init
      become_user: "{{ vguser }}"
      environment:
        PATH: "{{ ansible_env.PATH }}:/opt/node/bin"
      ansible.builtin.command:
        cmd: npm init -y
        chdir: "{{ sandbox }}"
        creates: "{{ sandbox }}/package.json"

    - name: Preserve generated package.json
      become_user: "{{ vguser }}"
      ansible.builtin.command:
        cmd: "cp package.json package.json.orig"
        chdir: "{{ sandbox }}"
        creates: "{{ sandbox }}/package.json.orig"

    - name: Overwrite package.json -- set type module and build tsc
      ansible.builtin.copy:
        dest: "{{ sandbox }}/package.json"
        content: |
          {
            "name": "{{ projname }}",
            "version": "1.0.0",
            "description": "",
            "main": "dist/index.js",
            "type": "module",
            "scripts": {
              "prebuild": "npx rimraf dist",
              "build": "npx tsc",
              "prestart": "npm run build",
              "start": "node dist/index.js",
              "predevel": "npm run build",
              "devel": "npx concurrently \"npx tsc -w\" \"nodemon dist/index.js\""
            },
            "keywords": [],
            "author": "",
            "license": "ISC"
          }
        mode: "0644"
        owner: "{{ vguser }}"

    - name: NPM install devel
      become_user: "{{ vguser }}"
      environment:
        PATH: "{{ ansible_env.PATH }}:/opt/node/bin"
      community.general.npm:
        name: "{{ item }}"
        path: "{{ sandbox }}"
        production: false
        state: present
      with_items:
        - typescript
        - nodemon
        - concurrently
        - rimraf
        - "@types/node"
        - "@types/express"

    - name: NPM install production
      become_user: "{{ vguser }}"
      environment:
        PATH: "{{ ansible_env.PATH }}:/opt/node/bin"
      community.general.npm:
        name: "{{ item }}"
        path: "{{ sandbox }}"
        production: true
        state: present
      with_items:
        - express

    - name: TS init
      become_user: "{{ vguser }}"
      environment:
        PATH: "{{ ansible_env.PATH }}:/opt/node/bin"
      ansible.builtin.command:
        cmd: npx tsc --init
        chdir: "{{ sandbox }}"
        creates: "{{ sandbox }}/tsconfig.json"

    - name: Preserve generated tsconfig.json
      become_user: "{{ vguser }}"
      ansible.builtin.command:
        cmd: "cp tsconfig.json tsconfig.json.orig"
        chdir: "{{ sandbox }}"
        creates: "{{ sandbox }}/tsconfig.json.orig"

    - name: NPM create TS Config
      ansible.builtin.copy:
        dest: "{{ sandbox }}/tsconfig.json"
        content: |
          {
            "compilerOptions": {
              "module": "NodeNext",
              "moduleResolution": "NodeNext",
              "target": "ES2020",
              "sourceMap": true,
              "outDir": "dist",
              "rootDir": "src",
              "strict": true
            },
            "include": ["src/**/*"],
          }
        mode: "0644"
        owner: "{{ vguser }}"

    - name: ES Module hello
      ansible.builtin.copy:
        dest: "{{ sandbox }}/src/hello.ts"
        content: |
          export const hello = 'hello world!';
        mode: "0644"
        owner: "{{ vguser }}"

    - name: CommonJS Module hola
      ansible.builtin.copy:
        dest: "{{ sandbox }}/src/hola.cts"
        content: |
          module.exports = 'hola world!';
        mode: "0644"
        owner: "{{ vguser }}"

    - name: Modules index
      ansible.builtin.copy:
        dest: "{{ sandbox }}/src/index.ts"
        content: |
          import { hello } from './hello.js';
          import hola from './hola.cjs'
          console.log(hello);
          console.log(hola);
        mode: "0644"
        owner: "{{ vguser }}"
